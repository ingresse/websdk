name: Deploy to production

on:
  push:
    branches:
      - main
  
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Enable dry-run mode?"
        required: true
        default: "false"
        type: choice
        options:
          - "true"
          - "false"

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-22.04
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Determine Slack Config
        id: slack_config
        run: |
          if [ "${{ github.event.inputs.dry_run }}" == "true" ]; then
            echo "slack_channel=${{ vars.SLACK_CH_TEST }}" >> $GITHUB_ENV
            echo "slack_token=${{ secrets.SLACK_BOT_TOKEN_TEST }}" >> $GITHUB_ENV
          else
            echo "slack_channel=${{ vars.SLACK_CH_TECH_DEPLOY }}" >> $GITHUB_ENV
            echo "slack_token=${{ secrets.SLACK_BOT_TOKEN }}" >> $GITHUB_ENV
          fi     

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
          
      - name: Environment | NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Notify start of Deployment in Slack
        id: deployment_message
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ env.slack_token }}
          payload: |
            channel: ${{ env.slack_channel }}
            text: |
                :rocket: *Deploy iniciado*
                *Repo:* <${{ github.event.repository.html_url }}|${{ github.event.repository.name }}>
                *Branch:* ${{ github.ref_name }}
                *Commit:* ${{ github.event.head_commit.url }}
                *Action:* <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|#${{ github.run_id }}>
                *Responsável:* ${{ github.actor }}    

      - name: Project | PreBuild
        run: |
          npm run deps

      - name: Project | Build
        run: |
          npm run build

      - name: Sync Build to S3
        run: |
          if [ "${{ github.event.inputs.dry_run }}" == "true" ]; then
            echo "Dry-run: Would have synced ./dist/v7/ to s3://cdn.ingresse.com/websdk/v7"
            aws s3 cp ./dist/v7/ s3://cdn.ingresse.com/websdk/v7 --recursive --dryrun
          else
            aws s3 cp ./dist/v7/ s3://cdn.ingresse.com/websdk/v7 --recursive
          fi

      - name: Invalidate CloudFront Cache
        env:
          CFID: ${{ vars.CF_DISTRIBUTION_ID }}
        run: |
          if [ "${{ github.event.inputs.dry_run }}" == "true" ]; then
            echo "Dry-run: Would have invalidated CloudFront cache for distribution $CFID"
          else
            aws cloudfront create-invalidation --distribution-id $CFID --paths "/*"
          fi

      - name: Invalidate CloudFlare Cache
        run: |
          if [ "${{ github.event.inputs.dry_run }}" == "true" ]; then
            echo "Dry-run: Would have invalidated CloudFlare cache for host: cdn.ingresse.com"
          else
            curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.ZONE_ID_CLOUDFLARE }}/purge_cache" \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer ${{ secrets.TOKEN_CLOUDFLARE_CLEAN_CACHE }}" \
              -d '{
                "hosts": [
                  "cdn.ingresse.com"
                ]
              }'
          fi
         
      - name: Notify success of deployment in Slack
        uses: slackapi/slack-github-action@v2.0.0
        if: success()
        with:
          method: chat.postMessage
          token: ${{ env.slack_token }}
          payload: |
            channel: ${{ env.slack_channel }}
            thread_ts: "${{ steps.deployment_message.outputs.ts }}"
            type: "in_thread"
            text: ":white_check_mark: *Deploy concluído* \n https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
  
      - name: Notify failure of deployment in Slack
        uses: slackapi/slack-github-action@v2.0.0
        if: failure()
        with:
          method: chat.postMessage
          token: ${{ env.slack_token }}
          payload: |
            channel: ${{ env.slack_channel }}
            thread_ts: "${{ steps.deployment_message.outputs.ts }}"
            type: "in_thread"
            text: ":x: *Deploy falhou* \n https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" 
